@page "/"
@inject HttpClient Http
@using Blazored.Js
    <div class="container">
        <div class="row text-center">
            <div class="col-sm">
                <h2>Blazorships - a battleships implementation</h2>
                <p>Built using Blazor and SignalR</p>
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <form class="form-inline justify-content-center">
                    <div class="form-group mx-sm-3 mb-2">
                        <label for="userName" class="sr-only">Username:</label>
                        <input type="text" class="form-control" id="userName" placeholder="Username" bind="@PlayerName" disabled="@(!CurrentGame.SpotAvailable)" />
                    </div>
                    <button type="button" class="btn btn-primary mb-2" id="btnPlay" disabled="@(!CurrentGame.SpotAvailable)">Play game</button>
                    <input type="hidden" bind="@Player.Id" id="playerId" />
                    <input type="hidden" bind="@CurrentGame.Id" id="gameId" />
                </form>
            </div>
        </div>
        <div class="row text-center">
            <div class="col-sm">
                <h4>Your ships</h4>
            </div>
            <div class="col-sm">
                <h4>Firing board</h4>
            </div>
        </div>
        <div class="row">
            <div class="col-sm text-center">
                <table class="ship-board">
                    @for (int i = 1; i <= 10; i++)
                    {
                        <tr>
                            @for (int j = 1; j <= 10; j++)
                            {
                                <td class="ship-tile @(Player.GameBoard.Panels.First(_ => _.Coordinates.Row == i && _.Coordinates.Column == j).IsHit ? "red" : "")">
                                    @Player.GameBoard.Panels.First(_ => _.Coordinates.Row == i && _.Coordinates.Column == j).Status
                                </td>
                            }
                        </tr>
                    }
                </table>

            </div>
            <div class="col-sm text-center">
                <table class="ship-board">
                    @for (int i = 1; i <= 10; i++)
                    {
                        <tr>
                            @for (int j = 1; j <= 10; j++)
                            {
                                <td class="ship-tile @(Player.FiringBoard.Panels.First(_ => _.Coordinates.Row == i && _.Coordinates.Column == j).Status == "X" ? "green" : "")">
                                    @Player.FiringBoard.Panels.First(_ => _.Coordinates.Row == i && _.Coordinates.Column == j).Status
                                </td>
                            }
                        </tr>
                    }
                </table>
            </div>
        </div>
        <div class="row">
            <div class="col-sm text-center">
                <br />
                <button class="btn btn-danger" disabled="@(!Player.IsMyTurn)" id="btnFire">Fire!</button>
                <h4>@CurrentGame.StatusText</h4>
            </div>
        </div>
        <div class="row">
            <div class="col-sm text-center">
                <h3>Chat with opponent</h3>
            </div>
        </div>
        <div class="row">
            <div class="col-sm text-center">
                <form class="form-inline justify-content-center">
                    <div class="form-group mx-sm-3 mb-2">
                        <label for="message" class="sr-only">Message:</label>
                        <input type="text" class="form-control" id="messageInput" placeholder="Type your message here" />
                    </div>
                    <input type="button" class="btn btn-success mb-2" id="sendButton" value="Send Message" />
                    <input type="button" class="btn btn-success" id="btnUpdateGame" style="display:none;" value="" onclick="@UpdateGame" />
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <hr />
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <ul id="messagesList"></ul>
            </div>
        </div>
    </div>

    @functions
    {
        string PlayerName { get; set; }
        Game CurrentGame { get; set; }
        Player Player { get; set; }
        string StartGameId { get; set; }
        protected override void OnInit()
        {
            CurrentGame = new Game();
            Player = CurrentGame.Player1;
        }
        protected override void OnAfterRender()
        {
            JsInterop.InitChat();
        }

        async Task UpdateGame()
        {
            var gameId = LocalStorage.Get<GameDTO>("CurrentGameId");
            Console.WriteLine($"Updating game {gameId}");
            var game = await Http.GetJsonAsync<Game>($"/api/Game/UpdateGame?gameid={gameId.Id}");
            var player = game.GetPlayerByName(PlayerName);
            if(player != null)
            {
                Player = player;
                CurrentGame = game;
            }
        }
    }